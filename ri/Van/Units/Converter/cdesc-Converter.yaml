--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Returns the name of this Converter, or <tt>nil</tt> if the Converter is not registered.
  name: name
  rw: RW
class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: convert_conversion
- !ruby/object:RDoc::RI::MethodSummary 
  name: converter
- !ruby/object:RDoc::RI::MethodSummary 
  name: converters
- !ruby/object:RDoc::RI::MethodSummary 
  name: current
- !ruby/object:RDoc::RI::MethodSummary 
  name: load_config
- !ruby/object:RDoc::RI::MethodSummary 
  name: loader_hash
- !ruby/object:RDoc::RI::MethodSummary 
  name: loaders
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
- !ruby/object:RDoc::RI::MethodSummary 
  name: register_loader
- !ruby/object:RDoc::RI::MethodSummary 
  name: registered_converters
- !ruby/object:RDoc::RI::MethodSummary 
  name: require
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class handles all conversions between units.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: There are two kinds of units; those that are not expressed as a function of other units --called base units-- and those that are expressed as a function of other units --called derived units. The latter kind is registered specifying how it depends on other units, while the former kind is not.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class also registers a list of Converters that are generally useable. The default Converter which is used when none is specified, can be retrieved with Converter.current. Converters can be registered with Converter.register.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Converters can be loaded from YAML. This allows Converters to be specified in configuration files.
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class handles all conversions between units.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: There are two kinds of units; those that are not expressed as a function of other units --called base units-- and those that are expressed as a function of other units --called derived units. The latter kind is registered specifying how it depends on other units, while the former kind is not.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class also registers a list of Converters that are generally useable. The default Converter which is used when none is specified, can be retrieved with Converter.current. Converters can be registered with Converter.register.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Converters can be loaded from YAML. This allows Converters to be specified in configuration files.
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class handles all conversions between units.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: There are two kinds of units; those that are not expressed as a function of other units --called base units-- and those that are expressed as a function of other units --called derived units. The latter kind is registered specifying how it depends on other units, while the former kind is not.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: This class also registers a list of Converters that are generally useable. The default Converter which is used when none is specified, can be retrieved with Converter.current. Converters can be registered with Converter.register.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Converters can be loaded from YAML. This allows Converters to be specified in configuration files.
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: ShiftedConversion
  value: Struct.new(:delta_type, :offset)
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: THREAD_REFERENCE
  value: "'Units::converter'.to_sym"
full_name: Van::Units::Converter
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: base_unit
- !ruby/object:RDoc::RI::MethodSummary 
  name: conversions
- !ruby/object:RDoc::RI::MethodSummary 
  name: decode_conversion
- !ruby/object:RDoc::RI::MethodSummary 
  name: include
- !ruby/object:RDoc::RI::MethodSummary 
  name: included_converters
- !ruby/object:RDoc::RI::MethodSummary 
  name: includes?
- !ruby/object:RDoc::RI::MethodSummary 
  name: inspect
- !ruby/object:RDoc::RI::MethodSummary 
  name: load
- !ruby/object:RDoc::RI::MethodSummary 
  name: method_missing
- !ruby/object:RDoc::RI::MethodSummary 
  name: register_prefixed_unit
- !ruby/object:RDoc::RI::MethodSummary 
  name: register_unit
- !ruby/object:RDoc::RI::MethodSummary 
  name: register_unit_internal
- !ruby/object:RDoc::RI::MethodSummary 
  name: registered?
- !ruby/object:RDoc::RI::MethodSummary 
  name: registered_here?
- !ruby/object:RDoc::RI::MethodSummary 
  name: registered_units
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_s
name: Converter
superclass: Object
